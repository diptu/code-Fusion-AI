{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Country Explorer Project Layout requirements.txt # Dependency installation server/ task/ # Django project countries/ # Django app for country data api/ # Django app for REST API ... # Other markdown pages, images, and static files Django Country Data Project Documentation This document provides a comprehensive guide to setting up, running, and using the Django Country Data Project. This project leverages the REST Countries API to fetch and store country information, presenting it through a user-friendly Django web application. Table of Contents Welcome to Country Explorer Project Layout Django Country Data Project Documentation Table of Contents 1. Introduction 2. Author Information 3. Technical Details 4. Prerequisites 5. Setup and Installation 6. Accessing the Application \ud83d\ude80 Run the Code Fusion App with Docker \ud83d\udc33 Pull the Docker Image \u25b6\ufe0f Run the Container \ud83c\udf10 Access the App 1. Introduction The Django Country Data Project is designed to provide a simple and efficient way to access and display information about countries. It automates the process of retrieving data from the REST Countries API and stores it in a local database, making it easily accessible through a Django-powered web interface. 2. Author Information About Author Developed as part of the Code Fusion AI Python Developer Assignment (May 2025). Author: Nazmul Alam Diptu Contact: diptunazmulalam@gmail.com 3. Technical Details Backend: Framework: Django API Development: Django REST Framework Database: SQLite Authentication: JWT (JSON Web Tokens) API Security: Django Rest HROTTLE_RATES Frontend: Templating: Django Templates Styling: Bootstrap 5 Data Source: API: REST Countries API v3.1 API Documentation: OpenAPI / ReDoc 4. Prerequisites Ensure the following are installed on your system: Python 3.12 Verify with python --version or python3 --version . Git Required to clone the repository. 5. Setup and Installation Setup and Installation Steps Follow these steps to set up the project locally: 5.1. Clone the Repository git clone https://github.com/diptu/code-Fusion-AI cd code-Fusion-AI 5.2. Create and Activate a Virtual Environment On macOS and Linux: python3 -m venv venv source venv/bin/activate On Windows: python -m venv venv . \\e nv \\S cripts \\a ctivate 5.3. Install Dependencies cd server/task pip install -r requirements.txt Open the Django shell: python manage.py shell 5.4. Apply Database Migrations python manage.py makemigrations python manage.py migrate 5.5. Fetch and Store Country Data Open the Django shell: - Inside the shell, run the following: - Will create a sueruser with username admin & password Hello$123 and - one reqular with username test & password Hello$123 from utils import setup_users setup_users () Then run the following inside the shell to fetch the data from the API and store it in the database: from countries.utils import fetch_and_store_countries fetch_and_store_countries () Exit the shell after completion: exit () 5.6. Start the Django Development Server python manage.py runserver Visit http://127.0.0.1:8000/ in your browser to access the application. 6. Accessing the Application Accessing the Application Once the server is running, open your browser and navigate to: http://127.0.0.1:8000/ You\u2019ll see the main interface of the Django Country Data Project. From here, you can explore, search, and view detailed country information. \ud83d\ude80 Run the Code Fusion App with Docker \ud83d\udc33 Pull the Docker Image To fetch the latest public image from Docker Hub: docker pull diptu/code_fusion_img:latest \u25b6\ufe0f Run the Container To start the application: docker run -d --name code_fusion -p 8000 :8000 diptu/code_fusion_img:latest \ud83c\udf10 Access the App Once the container is running, open your browser and visit: http://localhost:8000 Now you can access the project at http://127.0.0.1:8000/ in your browser. \ud83d\uded1 Stop and Remove the Container -To stop and remove the container when you're done: docker stop code_fusion && docker rm code_fusion","title":"Home"},{"location":"#welcome-to-country-explorer","text":"","title":"Welcome to Country Explorer"},{"location":"#project-layout","text":"requirements.txt # Dependency installation server/ task/ # Django project countries/ # Django app for country data api/ # Django app for REST API ... # Other markdown pages, images, and static files","title":"Project Layout"},{"location":"#django-country-data-project-documentation","text":"This document provides a comprehensive guide to setting up, running, and using the Django Country Data Project. This project leverages the REST Countries API to fetch and store country information, presenting it through a user-friendly Django web application.","title":"Django Country Data Project Documentation"},{"location":"#table-of-contents","text":"Welcome to Country Explorer Project Layout Django Country Data Project Documentation Table of Contents 1. Introduction 2. Author Information 3. Technical Details 4. Prerequisites 5. Setup and Installation 6. Accessing the Application \ud83d\ude80 Run the Code Fusion App with Docker \ud83d\udc33 Pull the Docker Image \u25b6\ufe0f Run the Container \ud83c\udf10 Access the App","title":"Table of Contents"},{"location":"#1-introduction","text":"The Django Country Data Project is designed to provide a simple and efficient way to access and display information about countries. It automates the process of retrieving data from the REST Countries API and stores it in a local database, making it easily accessible through a Django-powered web interface.","title":"1. Introduction"},{"location":"#2-author-information","text":"About Author Developed as part of the Code Fusion AI Python Developer Assignment (May 2025). Author: Nazmul Alam Diptu Contact: diptunazmulalam@gmail.com","title":"2. Author Information"},{"location":"#3-technical-details","text":"Backend: Framework: Django API Development: Django REST Framework Database: SQLite Authentication: JWT (JSON Web Tokens) API Security: Django Rest HROTTLE_RATES Frontend: Templating: Django Templates Styling: Bootstrap 5 Data Source: API: REST Countries API v3.1 API Documentation: OpenAPI / ReDoc","title":"3. Technical Details"},{"location":"#4-prerequisites","text":"Ensure the following are installed on your system: Python 3.12 Verify with python --version or python3 --version . Git Required to clone the repository.","title":"4. Prerequisites"},{"location":"#5-setup-and-installation","text":"Setup and Installation Steps Follow these steps to set up the project locally:","title":"5. Setup and Installation"},{"location":"#51-clone-the-repository","text":"git clone https://github.com/diptu/code-Fusion-AI cd code-Fusion-AI","title":"5.1. Clone the Repository"},{"location":"#52-create-and-activate-a-virtual-environment","text":"","title":"5.2. Create and Activate a Virtual Environment"},{"location":"#on-macos-and-linux","text":"python3 -m venv venv source venv/bin/activate","title":"On macOS and Linux:"},{"location":"#on-windows","text":"python -m venv venv . \\e nv \\S cripts \\a ctivate","title":"On Windows:"},{"location":"#53-install-dependencies","text":"cd server/task pip install -r requirements.txt Open the Django shell: python manage.py shell","title":"5.3. Install Dependencies"},{"location":"#54-apply-database-migrations","text":"python manage.py makemigrations python manage.py migrate","title":"5.4. Apply Database Migrations"},{"location":"#55-fetch-and-store-country-data","text":"Open the Django shell: - Inside the shell, run the following: - Will create a sueruser with username admin & password Hello$123 and - one reqular with username test & password Hello$123 from utils import setup_users setup_users () Then run the following inside the shell to fetch the data from the API and store it in the database: from countries.utils import fetch_and_store_countries fetch_and_store_countries () Exit the shell after completion: exit ()","title":"5.5. Fetch and Store Country Data"},{"location":"#56-start-the-django-development-server","text":"python manage.py runserver Visit http://127.0.0.1:8000/ in your browser to access the application.","title":"5.6. Start the Django Development Server"},{"location":"#6-accessing-the-application","text":"Accessing the Application Once the server is running, open your browser and navigate to: http://127.0.0.1:8000/ You\u2019ll see the main interface of the Django Country Data Project. From here, you can explore, search, and view detailed country information.","title":"6. Accessing the Application"},{"location":"#run-the-code-fusion-app-with-docker","text":"","title":"\ud83d\ude80 Run the Code Fusion App with Docker"},{"location":"#pull-the-docker-image","text":"To fetch the latest public image from Docker Hub: docker pull diptu/code_fusion_img:latest","title":"\ud83d\udc33 Pull the Docker Image"},{"location":"#run-the-container","text":"To start the application: docker run -d --name code_fusion -p 8000 :8000 diptu/code_fusion_img:latest","title":"\u25b6\ufe0f Run the Container"},{"location":"#access-the-app","text":"Once the container is running, open your browser and visit: http://localhost:8000 Now you can access the project at http://127.0.0.1:8000/ in your browser.","title":"\ud83c\udf10 Access the App"},{"location":"#stop-and-remove-the-container","text":"-To stop and remove the container when you're done: docker stop code_fusion && docker rm code_fusion","title":"\ud83d\uded1 Stop and Remove the Container"}]}